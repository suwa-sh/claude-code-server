name: Test

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rye
      uses: eifinger/setup-rye@v4
      with:
        version: 'latest'
    
    - name: Sync dependencies
      run: make sync
    
    - name: Run all linting checks
      run: make ci-lint

  test:
    name: Unit Tests (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rye
      uses: eifinger/setup-rye@v4
      with:
        version: 'latest'
    
    - name: Set up Python ${{ matrix.python-version }}
      run: |
        rye pin ${{ matrix.python-version }}
        make sync
    
    - name: Run unit tests
      run: make test
    
    - name: Generate coverage report
      if: matrix.python-version == '3.11'
      run: make coverage
    
    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.11'
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [lint, test]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rye
      uses: eifinger/setup-rye@v4
      with:
        version: 'latest'
    
    - name: Sync dependencies
      run: make sync
    
    - name: Install Node.js (for claude-code CLI)
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install claude-code CLI (mock)
      run: |
        # Create a mock claude command for CI testing
        mkdir -p $HOME/.local/bin
        cat > $HOME/.local/bin/claude << 'EOF'
        #!/bin/bash
        # Mock claude-code CLI for CI
        if [[ "$1" == "-p" ]]; then
          echo "Integration test response from mock Claude CLI"
        else
          echo "Mock claude-code CLI version 1.0.0"
        fi
        EOF
        chmod +x $HOME/.local/bin/claude
        echo "$HOME/.local/bin" >> $GITHUB_PATH
    
    - name: Verify claude-code installation
      run: |
        which claude
        claude -p "test"
    
    - name: Run integration tests
      run: make test-integration
      timeout-minutes: 10